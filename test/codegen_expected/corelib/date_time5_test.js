dart_library.library('corelib/date_time5_test', null, /* Imports */[
  'dart_sdk',
  'expect'
], function load__date_time5_test(exports, dart_sdk, expect) {
  'use strict';
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const expect$ = expect.expect;
  const date_time5_test = Object.create(null);
  let VoidTodynamic = () => (VoidTodynamic = dart.constFn(dart.definiteFunctionType(dart.dynamic, [])))();
  date_time5_test.main = function() {
    let d = new core.DateTime(2012);
    expect$.Expect.equals(2012, d.year);
    expect$.Expect.equals(1, d.month);
    expect$.Expect.equals(1, d.day);
    expect$.Expect.equals(0, d.hour);
    expect$.Expect.equals(0, d.minute);
    expect$.Expect.equals(0, d.second);
    expect$.Expect.equals(0, d.millisecond);
    d = new core.DateTime(2012, 1, 28);
    expect$.Expect.equals(2012, d.year);
    expect$.Expect.equals(1, d.month);
    expect$.Expect.equals(28, d.day);
    expect$.Expect.equals(0, d.hour);
    expect$.Expect.equals(0, d.minute);
    expect$.Expect.equals(0, d.second);
    expect$.Expect.equals(0, d.millisecond);
    d = new core.DateTime(1970, 3);
    expect$.Expect.equals(1970, d.year);
    expect$.Expect.equals(3, d.month);
    expect$.Expect.equals(1, d.day);
    expect$.Expect.equals(0, d.hour);
    expect$.Expect.equals(0, d.minute);
    expect$.Expect.equals(0, d.second);
    expect$.Expect.equals(0, d.millisecond);
    d = new core.DateTime(1970, 3, 1, 11);
    expect$.Expect.equals(1970, d.year);
    expect$.Expect.equals(3, d.month);
    expect$.Expect.equals(1, d.day);
    expect$.Expect.equals(11, d.hour);
    expect$.Expect.equals(0, d.minute);
    expect$.Expect.equals(0, d.second);
    expect$.Expect.equals(0, d.millisecond);
    d = new core.DateTime(0, 12, 24, 0, 12);
    expect$.Expect.equals(0, d.year);
    expect$.Expect.equals(12, d.month);
    expect$.Expect.equals(24, d.day);
    expect$.Expect.equals(0, d.hour);
    expect$.Expect.equals(12, d.minute);
    expect$.Expect.equals(0, d.second);
    expect$.Expect.equals(0, d.millisecond);
    d = new core.DateTime(-1, 2, 2, 3, 0, 0, 4);
    expect$.Expect.equals(-1, d.year);
    expect$.Expect.equals(2, d.month);
    expect$.Expect.equals(2, d.day);
    expect$.Expect.equals(3, d.hour);
    expect$.Expect.equals(0, d.minute);
    expect$.Expect.equals(0, d.second);
    expect$.Expect.equals(4, d.millisecond);
    d = new core.DateTime(-1, 2, 2, 3, 0, 4);
    expect$.Expect.equals(-1, d.year);
    expect$.Expect.equals(2, d.month);
    expect$.Expect.equals(2, d.day);
    expect$.Expect.equals(3, d.hour);
    expect$.Expect.equals(0, d.minute);
    expect$.Expect.equals(4, d.second);
    expect$.Expect.equals(0, d.millisecond);
    d = new core.DateTime(2012, 5, 15, 13, 21, 33, 12);
    expect$.Expect.equals(2012, d.year);
    expect$.Expect.equals(5, d.month);
    expect$.Expect.equals(15, d.day);
    expect$.Expect.equals(13, d.hour);
    expect$.Expect.equals(21, d.minute);
    expect$.Expect.equals(33, d.second);
    expect$.Expect.equals(12, d.millisecond);
  };
  dart.fn(date_time5_test.main, VoidTodynamic());
  // Exports:
  exports.date_time5_test = date_time5_test;
});
